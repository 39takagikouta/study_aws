47wordpress用のデータベース作成
1データベース作成　webサーバーにssh接続し、mysqlコマンドでrdsに接続　その中でdb作成
CREATE DATABASE aws_and_infra DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci; 
いみ　データベースの作成とデフォルトの文字コード設定とデータベースの照合順序を設定（文字列の比較方法（文字コードはutf8、多言語、大文字小文字を区別しないci））
SHOW DATABASES; これsqlか
CREATE USER 'aws_and_infra'@'%' IDENTIFIED BY 'password';
意味　接続元が%(どこでもいい)　接続時のパスワードも設定
GRANT ALL（すべての権限を付与） ON aws_and_infra.*（aws_and_infra以下の全てのデータベースに） TO 'aws_and_infra'@'%';
FLUSH PRIVILEGES;(設定を反映)
SELECT user , host FROM mysql.user;(確認)
先ほどのmysqlへの接続コマンドの名前の部分を変更
両者とも誤ったコマンドを打つとやばい　絶対に切断する
2ユーザー作成
3ユーザーに権限を付与

48
wordpressとはcms htmlcss知らなくてもwebサイト作れるシステム
最も使われているcms 34パーセントのウェブサイトが使っている
プラグインがたくさんあり、カスタマイズすることで色々できる
オープンソースなので、人が作ったのを使える　デザインテンプレートも
一方、自由度が高いので覚えることが多い
phpで作られている　中身をいじることで独自の機能を実装できる
今回のec2のosはamazonlinux2 その中にextrasライブラリがある　yumだと別のバージョンになるのでこっちを使う
最初にphp入れとくと、phpに関するライブラリを入れるときはそのバージョンに合わせてくれる
wget https://ja.wordpress.org/latest-ja.tar.gz
tar xzvf latest-ja.tar.gz 解凍コマンド
wgetはurlを指定してファイルをダウンロードするコマンド
sudo cp -r * /var/www/html/　*は現在いるところ以下全てのファイル　最後のやつはコピー先　/var/www/html/はあぱっちが参照している場所
sudo chown apache:apache /var/www/html/ -R 所有者をアパッチに変更
sudo systemctl status httpd.service

49
wp-adminをつけると管理画面に行ける

50　ワードプレスが表示される仕組み
これまでの学習を体系的に理解する
以降で、ipアドレスでアクセスしてからWebページが返されるまでの手順を学ぶ

51　TCP/IP
→TCP/IPプロトコルに基づいて通信が行われている
プロトコルとは
コンピュータ同士がネットワークを利用して通信するために決められた約束事
メーカーやosが違っても通信するため
TCP/IPとは
TCP/IPを中心として、インターネットを構築する上で必要なプロトコル群の総称
それ自体もプロトコルだが、総称的な意味でも使われる
4階層モデル　一連の処理
メールの例
アプリケーション層　入力して送信ボタン押す　トランスポート層に接続を指示
トランスポート層　前層の指示に基づいて、アプリ間の通信路を確保　送信の準備（コネクションの確率、切断）
ネットワーク層　ヘッダには受信側のアドレスを記載　ipアドレス
ネットワークインタフェース層　nic（lanを使うやつ）を動かすためのデバイスドライバ　接続するだけでなく、それをosが認識するソフトがないといけない
4つ目はAWSが勝手にやってくれる　awsに関するものを学ぶ

52http
htmlなどのコンテンツの送受信に用いられる通信の約束事
リクエストとレスポンスの書式を決めている
リクエスト
リクエストライン（メソッド、uri（urlからドメインを除いたパス）、プロトコルのバージョン）ヘッダー（追加情報 ドメインとか）ボディ（オプション）から構成
エスポンス
ステータスライン（プロトコルのバージョンとステータスコードとその意味）ヘッダー（追加情報）ボディ（コンテンツ）から構成
300リダイレクト400クライアントに問題500サーバーに問題

53TCP UDP
トランスポート層　アプリ感コネクションの確率切断
どのアプリかを指定するのも担う　ポート番号
TCP　信頼性のある通信を提供　情報をパケットに小分けにし順序を指定　再送も制御　メール
通信を制御する　データの到達確認（届いた？届いてなかったら再送確認応答（届いたよ、次はこれちょうだいの連絡がなかったら再送）とシーケンス番号）やコネクション管理（コネクション指向）
UDP　信頼性はない　届いたかは保証しない　高速性やリアルタイム性がある　動画や電話はこっち　遅れてなくても再送しなくていい
コネクションレス　いつでも送信可能　データをそのままネットワークに流す
パケットとはデータを小分けにしたもの　データ量が多いと一度に通信できないから
ヘッダーのフォーマット
udp 送信元ポート番号　宛先ポート番号
TCP 送信元ポート番号　宛先ポート番号 シーケンス番号　確認応答番号

54ip
ネットワーク層の役割は、最終的な宛先のコンピュータにパケットを届けること
ネットワークインタフェースそうは直接つながっているマシン同士の話　それを包括したのがこれ
役割
1ipアドレスも　ネットワーク上で宛先を識別
2ルーティング　パケットを届ける役割　複数のルーターを経由する
3パケットの分割再構築処理　インターフェース層によって最大転送単位が異なる　それに合わせてパケットを分割する　受け取った側の最後が再構築する
ヘッダーのフォーマット（4）　送信もと、宛先ipアドレス等

