39
フルマネージド　運用（バックアップ、dbのアップデート）を全部やってくれる
ec2を使う方法もあるが、こっちを使った方が構築も運用も楽
複数のアベイラビリティゾーンに設置することが推奨されている

40
rds＝フルマネージドなリレーショナルデータベースのサービス
awsエンジニアによるデータベース設計のベストプラクティスを適用している
アプリを用途によって最適化するだけでいい
フルマネージドだから、自分でssh接続してdbを設定することはできない
設定グループで設定する
1dbパラメータグループ　dbの設定ファイルを編集できない代わりにこれで編集できる　変更可能がtrueならば変更可能
適用タイプはstaticはインスタンスの起動後に反映　dynamicならすぐ
2オプショングループ　機能（）プラグイン使いたいとか
3サブネットグループ　これで指定したプライベートサブネットの中でrdsインスタンスが作成される
rdsの特徴
1可用性の向上　マルチazを簡単に構築できる　
2パフォーマンスの向上が楽　リードレプリカを簡単に構築できる　
3運用負荷の軽減

41
マルチazのために、複数のゾーンにサブネットを立ち上げ

42
セキュリティグループ（ファイアウォールで必要なところからだけアクセスできるようにする）、サブネットパラメータオプショングループの作成
今回はwebサーバーからsqlでのみ接続できるようにする
ソースにはセキュリティグループを指定可能

43
作成
1dbエンジン　設定の詳細は動画添付の資料　スナップショットは手動で撮ったら持っとくのにお金がかかる rds消したらこれも消す
テスト環境だと停止してもいいが、本番環境はしないほうがいい　停止に時間がかかることがある　rds側にインスタンスがなければ起動ができないことも
2本番環境
3db詳細の設定
4詳細設定の設定
これら全て立ち上げ時に一括で設定する

44
sudo yum -y install mysql
エンドポイントで接続
mysql -h aws-and-infra-web.ch0eoayuwnj4.ap-northeast-1.rds.amazonaws.com -u root -p
-h エンドポイント
-u ユーザー名
-p パスワード要求　コマンドで入れられるけどログに残したくないなら空欄で
うまくいかない時の確認方法も動画にあった　セキュリティグループやユーザー名、ec2インスタンスなども確認する