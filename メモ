1-2　システムをインフラから構築できるようになろう
インフラのメリット
1自身でサービスを作れる　paasは高い
2システム全体で対応できる　課題の切り分け、対応策

インフラ構築の考え方
1サーバー構成
サーバー＝サーバー用のosをインストールしたコンピューター
詳細は動画
2ネットワークの構成

1-4 インフラとは
・インフラとは
サーバーやネットワークのこと
・サーバーとは
クライアントに対してサービスを提供するコンピューター
機能が違うだけでどれもコンピュータ
・ネットワーク
複数のコンピューターを繋いでデータを送受信できるようにするもの
・クラウド（コンピューティング）
ネットワークを利用してコンピューターリソースを利用する形態のこと
具体的には、インフラをネットワーク経由で利用管理できる

写経→使ってみる

ルートユーザーはなんでもできる特権ユーザー　ミスったら終わり
アカウントに関わることの変更以外は、作業用のiamユーザーを使用する
権限を個別に変更できる　ログも確認できる

順序
ネットワークの構築VCP→サーバーの設置→必要なソフトウェアを導入
外から接続できる＝パブリックサブネット



vcp ネットワーク接続
2-2AWSのネットワークの概念
リージョン　サービスを使用するとき、まずこれを選択する
これごとにネットワークを設定し、サーバーを作っていく
リージョンによって使えるサービスが違う　アメリカが最新
東京がおすすめ

アベイラビリティゾーン
世界各国の複数のデータセンター群
各リージョンに複数ある　災害対策

VPC
AWS上に仮想ネットワークを作成できるサービス
AWSで作業時はまずこれを作る
リージョンの下で、アベイラビリティゾーンをまとめて設定する
この中をネットワークでさらに区切るのがサブネット
これは、VCPを細かく区切ったネットワーク
複数のゾーンにサーバーを置くことで冗長性を担保

ipアドレス　32ビット　8ビットずつ
10進数になっている
パブリックipアドレスとプライベートipアドレスがある
ネットワークを構築する際は、ipアドレスの範囲を決める
ネットワーク部とホスト部に区分けすることで範囲を表記
ホスト部はネットワーク内で任意で設定可能
範囲の表記法　1サイダー表記　2サブネットマスク表記

1vpcを作成
2サブネットを作成
vpcをサブネットに分割するメリット　1アベイラビリティゾーンを話すことで、災害対策　2セキュリティ上の理由で、データベースサーバーだけを隠せる
3ルーティングを設定
ipアドレス＝住所
ルーターが、ipアドレスがどのデバイスと繋がっているかを管理している
この設定をルーティングという　具体例の図は動画参照
ルーターのルートテーブルに保存されている
ルートテーブルには、宛先のIPアドレスと次のルーターがセットで保存されている
インターネットゲートウェイは、vpcとインターネットを繋ぐ仮想のルーター
サブネットを作り、それに対応するルートテーブルを設定したら、ルーターをawsがつくってくれる

18ネットワーク設計時に考慮すべきポイント
vpc設定ポイント
・vpcでは仮想のプライベートネットワーク空間を作成するので、プライベートipアドレスを使用した方がいい
・ipアドレスの範囲は後から変更できないので大きめに設定　16が推奨

vxpやアカウントの分割のコツ
・異なるシステムかどうかでアカウントを分けるかは判断
・同一システムの各環境（本番とか）は、vpcとアカウントのどちらを分ける？
アカウントを分けたらiamがだるい　分けなくていいけど、リージョンを分ける　そうしたら見やすい

サブネットの設計ポイント
・ipアドレス数を/24で区切るといい
・サブネットの分割は、ルーティングとアベイラビリティゾーンを基準に行う
サブネットに割り当てられるルートテーブルは一つ
インターネットアクセスの有無（今回の場合）、拠点アクセスの有無などのルーティングポリシーに応じて分割する
高可用性のため、二つ以上のアベイラビリティゾーンを使用する



ec2 webサーバーを構築
21 ec2とは？
webサーバーを作るためのサービス　仮想サーバー
インスタンスというのはこれが立ち上げたサーバーのこと
サーバーの追加や削除スペック変更も柔軟に可能
osより上のレイヤについては自由に設定できる
1インスタンスを設置2Apacheをインストール3ファイアウォールの設定

1の具体的手順
1amiの選択2インスタンスタイプの選択3ストレージの追加4セキュリティグループの設定5sshキーペアの設定

amiはサーバーのテンプレート　インスタンス軌道に必要な情報が入ったosのイメージ
自分でos入れなくていい

インスタンスタイプは、サーバのスペックを定義したもの　高いほど料金が高い

ストレージはサーバにくっつけるデータの保存場所　2種類ある　ほとんどebsつかう
インスタンス立ち上げのさい　ネットワークインターフェースを設定していない　これが問題があるか？
ルートの場合はストレージは作成時はデフォルトでebs
キーペアはインスタンスにログインするための鍵

23 sshでサーバーにログイン
ログイン時には公開鍵認証が必要
サーバーにログインする＝離れた場所にあるサーバーに入って自分のパソコンから操作すること
sshとは、サーバーとパソコンをセキュアに繋ぐサービスのこと
通信内容を暗号化してくれる遠隔ログインシステム
パソコンとサーバー両者のsshが通信　sshクライアントとsshサーバー

25
chmod 600 aws-and-infra-ssh-key.pem
サーバーに入るための秘密鍵にオーナー以外が使えないよう読み書き権限を付与
これをしないとec2には入れない

26
サーバーに本人だけがログインできるようにするために、ec2はsshログイン時に公開鍵認証をおこなっているpemファイル
公開鍵認証は公開鍵暗号を用いる　公開鍵と秘密鍵を用いる
公開鍵暗号のイメージは南京錠　ロックは誰でもできる　解除は鍵持ちしかできない
送りたい人は鍵をかけて一般公開　鍵を持っている人だけが開けられる
南京錠は公開鍵　鍵が秘密鍵　暗号文と平文
公開鍵認証の手順
1ログインさせて2このデータ復号してみろよ3ほいよ4復号できてるな、本人確定

27　ポート番号
sshでログインできたのは何故か　さらに深掘り
サーバーにはいろんなプログラムが動いているが、それを受け付けるプログラムをどう特定している
→ポート番号　プログラムのアドレス
ポート番号の決まり方
1デフォルトで決まっている番号
代表的なプログラムはこれ　便利だから　ウェルノウンポート番号
クライアントが接続先のポート番号を省略可能

2動的に決まる番号
サーバーと違って、クライアントのポート番号は決まってなくてもいい
osが他のと被らないようにクライアントのポート番号を勝手に決めている
sudo lsof -i -n -P
lsofはどのポート番号でどのプログラムが待ち受けているかを一覧で見れる
-iは、サーバーの待機ポートとプロセスを一覧表示
-nはipアドレスをホスト名に変換しないオプション
-Pはポート番号をサービス名に変換しないオプション
Listenが待ち受けている　establishedは通信中
sshd     3228     root    3u  IPv4  19636      0t0  TCP *:22 (LISTEN)
sshdはsshサーバーのプログラム
*はどこからでも接続できる
22はポート番号

28Apacheインストール
sudo yum update
yumはlinuxのパッケージ管理ツール　linuxはサーバーのos
サーバーにはさまざまなライブラリが動いている（パッケージ）
それをインストールアンインストールするのがyum
sudoはルート権限で実行すること　通常はec2ユーザー　それでは権限的にyumできないので、ルートユーザーを使う
sudo yum update
sudo yum install httpd
sudo systemctl start httpd.service　アプリケーションを起動
再起動する
sudo systemctl status httpd.serviceで起動しているか確認
ps -axu LINUXで動いているプロセス（動いているアプリ）を確認
-ax 全て表示　-u全てのプロセスをメモリの使用率付きで表示
ps -axu | grep httpd |はパイプライン　左の処理結果を右に渡す　grepはただの検索
今のままではサーバーが停止したらアパッチも停止する
自動起動　sudo systemctl enable httpd.service
systemctlプロセスの起動停止を操作

29ファイアウォール
Apacheはhttpリクエストを受け取ってページを送る
しかし現状ファイアウォールのせいで通信がシャットダウンされるから設定変更する
ファイアウォール　通して良い通信だけを通して、それ以外は通さない機能の総称　不正アクセス防止
現在、パブリックサブネットへの通信はポート22（ssh）以外遮断されている
AWSにおいては、セキュリティーグループがそれに該当　ec2インスタンスごとに設定
インバウンドとアウトバウンド　前者に設定が必要

30ipアドレスを再起動時にも固定(elastic ipアドレス)
これをインスタンスに付与する
EC2アドレスに関連づけられていて、そのインスタンスが起動中であれば無料
使わない時は解放する

疑問点
プライベート IP アドレス
Elastic IP アドレスを関連付けるプライベート IP アドレスです。10.0.10.29にした